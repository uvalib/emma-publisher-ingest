#
# buildspec.yml
#

version: 0.2

env:
  variables:
    deploy_bucket: emma-lambda-ingest-deploy

phases:
  install:
    runtime-versions:
      golang: 1.x
      python: 3.x
#    commands:

  pre_build:
    commands:
      - BUILD_VERSION=$(date --date="@$(echo ${CODEBUILD_START_TIME} | cut -c1-10)" +"%Y%m%d%H%M%S")
      - COMMIT_TAG=gitcommit-${CODEBUILD_RESOLVED_SOURCE_VERSION}

  build:
    commands:
      #
      # build the assets
      #
      - cd ${CODEBUILD_SRC_DIR}/bibliovault-ingest
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/bibliovault-validate
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/internet-archive-ingest
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/openalex-ingest
      - make linux
      #
      # copy to the results bucket
      #
      #
      # bibliovault-ingest function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/bibliovault-ingest/package/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/bibliovault-ingest/deployment.zip --quiet
      #
      # bibliovault-validate function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/bibliovault-validate/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/bibliovault-validate/deployment.zip --quiet
      #
      # internet-archive-ingest function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/internet-archive-ingest/package/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/internet-archive-ingest/deployment.zip --quiet
      #
      # openalex-ingest function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/openalex-ingest/package/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/openalex-ingest/deployment.zip --quiet
      #
      # create the git commit tag file
      #
      - touch ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git
      - aws s3 cp ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git s3://${deploy_bucket}/${BUILD_VERSION}/${COMMIT_TAG}.git --quiet
      #
      # make the latest folder
      #
      - aws s3 sync s3://${deploy_bucket}/${BUILD_VERSION} s3://${deploy_bucket}/latest --delete --quiet
      #
      # update the latest tag
      #
      - aws --region=$AWS_REGION ssm put-parameter --name /lambdas/${deploy_bucket}/latest --value ${BUILD_VERSION} --type String --overwrite

#  post_build:
#    commands:

#
# end of file
#
